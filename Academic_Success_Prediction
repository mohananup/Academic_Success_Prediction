{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":73290,"databundleVersionId":8710574,"sourceType":"competition"}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"**Goal**\n* Predict academic risk of students in higher education(Graduate, Enrolled, Dropout)\n\n**Type of Problem**\n* MultiClass Classification \n\n**Evaluation Metric**\n* Accuracy Score\n    ","metadata":{}},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport math as math\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.feature_selection import mutual_info_classif\n\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler, RobustScaler\n\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.linear_model import LogisticRegression\n\nfrom xgboost import XGBClassifier\n\nfrom sklearn.metrics import accuracy_score, classification_report\n\nfrom sklearn.pipeline import Pipeline","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-24T12:04:00.549217Z","iopub.execute_input":"2024-06-24T12:04:00.549662Z","iopub.status.idle":"2024-06-24T12:04:03.646814Z","shell.execute_reply.started":"2024-06-24T12:04:00.549628Z","shell.execute_reply":"2024-06-24T12:04:03.645620Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":"**Loading of Data**","metadata":{}},{"cell_type":"code","source":"#Import data\ndata_raw = pd.read_csv('/kaggle/input/playground-series-s4e6/train.csv', index_col='id')\ndata_val = pd.read_csv('/kaggle/input/playground-series-s4e6/test.csv', index_col='id')\n\ndata1 = data_raw.copy(deep=True)\ndata1_test= data_val.copy(deep=True)\n\ndata1.name = \"Training Data\"\ndata1_test.name = \"Testing Data\"\n\ndata_cleaner = [data1, data1_test]\n\ndata1.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T12:04:03.648848Z","iopub.execute_input":"2024-06-24T12:04:03.649371Z","iopub.status.idle":"2024-06-24T12:04:04.375754Z","shell.execute_reply.started":"2024-06-24T12:04:03.649339Z","shell.execute_reply":"2024-06-24T12:04:04.374628Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"    Marital status  Application mode  Application order  Course  \\\nid                                                                \n0                1                 1                  1    9238   \n1                1                17                  1    9238   \n2                1                17                  2    9254   \n3                1                 1                  3    9500   \n4                1                 1                  2    9500   \n\n    Daytime/evening attendance  Previous qualification  \\\nid                                                       \n0                            1                       1   \n1                            1                       1   \n2                            1                       1   \n3                            1                       1   \n4                            1                       1   \n\n    Previous qualification (grade)  Nacionality  Mother's qualification  \\\nid                                                                        \n0                            126.0            1                       1   \n1                            125.0            1                      19   \n2                            137.0            1                       3   \n3                            131.0            1                      19   \n4                            132.0            1                      19   \n\n    Father's qualification  ...  Curricular units 2nd sem (credited)  \\\nid                          ...                                        \n0                       19  ...                                    0   \n1                       19  ...                                    0   \n2                       19  ...                                    0   \n3                        3  ...                                    0   \n4                       37  ...                                    0   \n\n    Curricular units 2nd sem (enrolled)  \\\nid                                        \n0                                     6   \n1                                     6   \n2                                     6   \n3                                     8   \n4                                     7   \n\n    Curricular units 2nd sem (evaluations)  \\\nid                                           \n0                                        7   \n1                                        9   \n2                                        0   \n3                                       11   \n4                                       12   \n\n    Curricular units 2nd sem (approved)  Curricular units 2nd sem (grade)  \\\nid                                                                          \n0                                     6                         12.428571   \n1                                     0                          0.000000   \n2                                     0                          0.000000   \n3                                     7                         12.820000   \n4                                     6                         12.933333   \n\n    Curricular units 2nd sem (without evaluations)  Unemployment rate  \\\nid                                                                      \n0                                                0               11.1   \n1                                                0               11.1   \n2                                                0               16.2   \n3                                                0               11.1   \n4                                                0                7.6   \n\n    Inflation rate   GDP    Target  \nid                                  \n0              0.6  2.02  Graduate  \n1              0.6  2.02   Dropout  \n2              0.3 -0.92   Dropout  \n3              0.6  2.02  Enrolled  \n4              2.6  0.32  Graduate  \n\n[5 rows x 37 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Marital status</th>\n      <th>Application mode</th>\n      <th>Application order</th>\n      <th>Course</th>\n      <th>Daytime/evening attendance</th>\n      <th>Previous qualification</th>\n      <th>Previous qualification (grade)</th>\n      <th>Nacionality</th>\n      <th>Mother's qualification</th>\n      <th>Father's qualification</th>\n      <th>...</th>\n      <th>Curricular units 2nd sem (credited)</th>\n      <th>Curricular units 2nd sem (enrolled)</th>\n      <th>Curricular units 2nd sem (evaluations)</th>\n      <th>Curricular units 2nd sem (approved)</th>\n      <th>Curricular units 2nd sem (grade)</th>\n      <th>Curricular units 2nd sem (without evaluations)</th>\n      <th>Unemployment rate</th>\n      <th>Inflation rate</th>\n      <th>GDP</th>\n      <th>Target</th>\n    </tr>\n    <tr>\n      <th>id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>9238</td>\n      <td>1</td>\n      <td>1</td>\n      <td>126.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>19</td>\n      <td>...</td>\n      <td>0</td>\n      <td>6</td>\n      <td>7</td>\n      <td>6</td>\n      <td>12.428571</td>\n      <td>0</td>\n      <td>11.1</td>\n      <td>0.6</td>\n      <td>2.02</td>\n      <td>Graduate</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>17</td>\n      <td>1</td>\n      <td>9238</td>\n      <td>1</td>\n      <td>1</td>\n      <td>125.0</td>\n      <td>1</td>\n      <td>19</td>\n      <td>19</td>\n      <td>...</td>\n      <td>0</td>\n      <td>6</td>\n      <td>9</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>11.1</td>\n      <td>0.6</td>\n      <td>2.02</td>\n      <td>Dropout</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>17</td>\n      <td>2</td>\n      <td>9254</td>\n      <td>1</td>\n      <td>1</td>\n      <td>137.0</td>\n      <td>1</td>\n      <td>3</td>\n      <td>19</td>\n      <td>...</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>16.2</td>\n      <td>0.3</td>\n      <td>-0.92</td>\n      <td>Dropout</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>9500</td>\n      <td>1</td>\n      <td>1</td>\n      <td>131.0</td>\n      <td>1</td>\n      <td>19</td>\n      <td>3</td>\n      <td>...</td>\n      <td>0</td>\n      <td>8</td>\n      <td>11</td>\n      <td>7</td>\n      <td>12.820000</td>\n      <td>0</td>\n      <td>11.1</td>\n      <td>0.6</td>\n      <td>2.02</td>\n      <td>Enrolled</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>9500</td>\n      <td>1</td>\n      <td>1</td>\n      <td>132.0</td>\n      <td>1</td>\n      <td>19</td>\n      <td>37</td>\n      <td>...</td>\n      <td>0</td>\n      <td>7</td>\n      <td>12</td>\n      <td>6</td>\n      <td>12.933333</td>\n      <td>0</td>\n      <td>7.6</td>\n      <td>2.6</td>\n      <td>0.32</td>\n      <td>Graduate</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 37 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"\nclass color:\n   PURPLE = '\\033[95m'\n   CYAN = '\\033[96m'\n   DARKCYAN = '\\033[36m'\n   BLUE = '\\033[94m'\n   GREEN = '\\033[92m'\n   YELLOW = '\\033[93m'\n   RED = '\\033[91m'\n   BOLD = '\\033[1m'\n   UNDERLINE = '\\033[4m'\n   END = '\\033[0m'","metadata":{"execution":{"iopub.status.busy":"2024-06-24T12:04:04.377247Z","iopub.execute_input":"2024-06-24T12:04:04.377708Z","iopub.status.idle":"2024-06-24T12:04:04.384179Z","shell.execute_reply.started":"2024-06-24T12:04:04.377662Z","shell.execute_reply":"2024-06-24T12:04:04.382904Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":"# Basic Data Analysis","metadata":{}},{"cell_type":"code","source":"%%skip \n#Data Shape \n\nprint(color.BOLD + \"Training data shape:\" + color.END, data_raw.shape )\nprint(color.BOLD + \"Testing data shape:\" + color.END, data_val.shape )","metadata":{"execution":{"iopub.status.busy":"2024-06-24T12:04:04.387132Z","iopub.execute_input":"2024-06-24T12:04:04.387577Z","iopub.status.idle":"2024-06-24T12:04:04.396844Z","shell.execute_reply.started":"2024-06-24T12:04:04.387536Z","shell.execute_reply":"2024-06-24T12:04:04.395420Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stderr","text":"UsageError: Cell magic `%%skip` not found.\n","output_type":"stream"}]},{"cell_type":"raw","source":"data_raw.describe()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T16:26:32.461677Z","iopub.execute_input":"2024-06-22T16:26:32.462110Z","iopub.status.idle":"2024-06-22T16:26:32.643389Z","shell.execute_reply.started":"2024-06-22T16:26:32.462073Z","shell.execute_reply":"2024-06-22T16:26:32.642175Z"}}},{"cell_type":"raw","source":"data_val.describe()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T17:10:55.528920Z","iopub.execute_input":"2024-06-22T17:10:55.529343Z","iopub.status.idle":"2024-06-22T17:10:55.700095Z","shell.execute_reply.started":"2024-06-22T17:10:55.529308Z","shell.execute_reply":"2024-06-22T17:10:55.698886Z"}}},{"cell_type":"raw","source":"#Data types\n\nprint(color.BOLD + \"Training data types:\" + color.END)\nprint(data_raw.dtypes)\nprint(\"------------------------------------------\")\nprint(\"------------------------------------------\")\nprint(color.BOLD + \"Testing Data types:\"+ color.END)\nprint(data_val.dtypes)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T16:26:32.798023Z","iopub.execute_input":"2024-06-22T16:26:32.798381Z","iopub.status.idle":"2024-06-22T16:26:32.809918Z","shell.execute_reply.started":"2024-06-22T16:26:32.798351Z","shell.execute_reply":"2024-06-22T16:26:32.808504Z"}}},{"cell_type":"raw","source":"#Cardinality\n\nprint(color.BOLD + \"Cardinality of training data\" + color.END)\nprint(data_raw.nunique())\nprint(\"------------------------------------------\")\nprint(\"------------------------------------------\")\nprint(color.BOLD + \"Cardinality of testing data\" + color.END)\nprint(data_val.nunique())","metadata":{"execution":{"iopub.status.busy":"2024-06-22T16:26:32.811678Z","iopub.execute_input":"2024-06-22T16:26:32.812168Z","iopub.status.idle":"2024-06-22T16:26:32.875862Z","shell.execute_reply.started":"2024-06-22T16:26:32.812125Z","shell.execute_reply":"2024-06-22T16:26:32.874738Z"}}},{"cell_type":"raw","source":"\n#Missing Value anaylsis\n\nprint(color.BOLD + \"Null values in training data :\"+ color.END, color.RED , data_raw.isnull().values.any() if data_raw.isnull().values.any() == True else color.GREEN , data_raw.isnull().values.any(), color.END)\nprint(color.BOLD + \"Null values in testing data :\"+ color.END,  color.RED , data_raw.isnull().values.any() if data_raw.isnull().values.any() == True else color.GREEN , data_raw.isnull().values.any(), color.END)","metadata":{"execution":{"iopub.status.busy":"2024-06-22T16:26:32.877149Z","iopub.execute_input":"2024-06-22T16:26:32.877488Z","iopub.status.idle":"2024-06-22T16:26:32.927126Z","shell.execute_reply.started":"2024-06-22T16:26:32.877458Z","shell.execute_reply":"2024-06-22T16:26:32.925915Z"}}},{"cell_type":"code","source":"#data1.drop(\"Target\", axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-24T12:04:04.397712Z","iopub.status.idle":"2024-06-24T12:04:04.398152Z","shell.execute_reply.started":"2024-06-24T12:04:04.397951Z","shell.execute_reply":"2024-06-24T12:04:04.397968Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"raw","source":"data1.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T16:26:32.936499Z","iopub.execute_input":"2024-06-22T16:26:32.936881Z","iopub.status.idle":"2024-06-22T16:26:32.967794Z","shell.execute_reply.started":"2024-06-22T16:26:32.936850Z","shell.execute_reply":"2024-06-22T16:26:32.966506Z"}}},{"cell_type":"raw","source":"#Finding Duplicates\n\nprint(color.BOLD + \"Duplicate data in Dataframe:\" + color.END, data1.duplicated(keep='first').sum(), \"|\", round(data1.duplicated(keep='first').sum()/data1.duplicated(keep='first').count(), 2),\"%\")","metadata":{"execution":{"iopub.status.busy":"2024-06-22T16:26:32.969671Z","iopub.execute_input":"2024-06-22T16:26:32.970170Z","iopub.status.idle":"2024-06-22T16:26:33.137227Z","shell.execute_reply.started":"2024-06-22T16:26:32.970130Z","shell.execute_reply":"2024-06-22T16:26:33.135850Z"}}},{"cell_type":"markdown","source":"**Data Description**\n* No Missing Value\n* ","metadata":{}},{"cell_type":"code","source":"# Apply label encoding to the Target Graduate-2, Enrolled - 1, Dropout - 0\nlabel_encoder = LabelEncoder()\n\ndata1['Target'] = label_encoder.fit_transform(data1['Target'])","metadata":{"execution":{"iopub.status.busy":"2024-06-24T12:04:29.415348Z","iopub.execute_input":"2024-06-24T12:04:29.416267Z","iopub.status.idle":"2024-06-24T12:04:29.447568Z","shell.execute_reply.started":"2024-06-24T12:04:29.416228Z","shell.execute_reply":"2024-06-24T12:04:29.446046Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":"# Exploratory Data Analysis (EDA)","metadata":{}},{"cell_type":"raw","source":"# Quantative or Numerical Features \n# Filter discrete features programtically as most of them are discrete\n\ncontinous_features= [\"Previous qualification\",\"Admission grade\",\"Unemployment rate\",\"Inflation rate\", \"GDP\"]\ndiscrete_features = data1.select_dtypes(include=['number']).drop(columns=continous_features).columns\n\ntotal_numerical_features = data1.select_dtypes(include=['number']).drop(columns='Target').columns # continous + discrete\n\n\n# Qualitative or Categorical Features\nnominal_features = None\nordinal_features = None\n\nprint(total_numerical_features)","metadata":{"execution":{"iopub.status.busy":"2024-06-23T06:05:45.172703Z","iopub.execute_input":"2024-06-23T06:05:45.173539Z","iopub.status.idle":"2024-06-23T06:05:45.238482Z","shell.execute_reply.started":"2024-06-23T06:05:45.173502Z","shell.execute_reply":"2024-06-23T06:05:45.237178Z"}}},{"cell_type":"raw","source":"# Target Distribution\ndata1['Target'].value_counts().plot(kind='pie', autopct='%1.1f%%')\nplt.title('Target Distribution')\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T17:25:19.814349Z","iopub.execute_input":"2024-06-22T17:25:19.814748Z","iopub.status.idle":"2024-06-22T17:25:19.991797Z","shell.execute_reply.started":"2024-06-22T17:25:19.814717Z","shell.execute_reply":"2024-06-22T17:25:19.989940Z"}}},{"cell_type":"raw","source":"# Calculate the class proportions\nclass_proportions = data1['Target'].value_counts(normalize=True)\nprint(class_proportions)\n\n# Calculate the imbalance ratio\nimbalance_ratio = class_proportions.max() / class_proportions.min()\nprint(f'Imbalance Ratio: {imbalance_ratio:.2f}')","metadata":{"execution":{"iopub.status.busy":"2024-06-23T06:05:54.593848Z","iopub.execute_input":"2024-06-23T06:05:54.594253Z","iopub.status.idle":"2024-06-23T06:05:54.608033Z","shell.execute_reply.started":"2024-06-23T06:05:54.594220Z","shell.execute_reply":"2024-06-23T06:05:54.606815Z"}}},{"cell_type":"code","source":"## should the imbalance be investigated ??","metadata":{"execution":{"iopub.status.busy":"2024-06-24T12:04:04.401842Z","iopub.status.idle":"2024-06-24T12:04:04.402281Z","shell.execute_reply.started":"2024-06-24T12:04:04.402064Z","shell.execute_reply":"2024-06-24T12:04:04.402085Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Relation between features and targets**","metadata":{}},{"cell_type":"code","source":"\n# Calculate mutual information\n\nmi = mutual_info_classif(data1, data1.Target, discrete_features='auto', random_state=1)\n\n# Create a DataFrame to display MI scores\nmi_scores = pd.DataFrame({'Feature': data1.columns, 'MI Score': mi})\nmi_scores = mi_scores.sort_values(by='MI Score', ascending=False)\n\nprint(color.BOLD + \"MI scores in descending order\" + color.END)\nmi_scores\n","metadata":{"execution":{"iopub.status.busy":"2024-06-24T12:04:33.582294Z","iopub.execute_input":"2024-06-24T12:04:33.582763Z","iopub.status.idle":"2024-06-24T12:04:48.946770Z","shell.execute_reply.started":"2024-06-24T12:04:33.582728Z","shell.execute_reply":"2024-06-24T12:04:48.943944Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"\u001b[1mMI scores in descending order\u001b[0m\n","output_type":"stream"},{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"                                           Feature  MI Score\n36                                          Target  1.048135\n30             Curricular units 2nd sem (approved)  0.481456\n31                Curricular units 2nd sem (grade)  0.417479\n24             Curricular units 1st sem (approved)  0.406723\n25                Curricular units 1st sem (grade)  0.365549\n29          Curricular units 2nd sem (evaluations)  0.195807\n23          Curricular units 1st sem (evaluations)  0.188136\n3                                           Course  0.113880\n16                         Tuition fees up to date  0.109436\n12                                 Admission grade  0.105250\n19                               Age at enrollment  0.095069\n6                   Previous qualification (grade)  0.091108\n18                              Scholarship holder  0.089176\n1                                 Application mode  0.083433\n22             Curricular units 1st sem (enrolled)  0.076370\n28             Curricular units 2nd sem (enrolled)  0.075848\n17                                          Gender  0.056981\n5                           Previous qualification  0.033361\n8                           Mother's qualification  0.033349\n15                                          Debtor  0.032331\n9                           Father's qualification  0.029423\n10                             Mother's occupation  0.028342\n11                             Father's occupation  0.026518\n0                                   Marital status  0.021026\n13                                       Displaced  0.018155\n2                                Application order  0.016599\n33                               Unemployment rate  0.013764\n4                       Daytime/evening attendance  0.012637\n35                                             GDP  0.012042\n34                                  Inflation rate  0.008999\n32  Curricular units 2nd sem (without evaluations)  0.006512\n26  Curricular units 1st sem (without evaluations)  0.002899\n20                                   International  0.001328\n21             Curricular units 1st sem (credited)  0.000353\n14                       Educational special needs  0.000000\n27             Curricular units 2nd sem (credited)  0.000000\n7                                      Nacionality  0.000000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Feature</th>\n      <th>MI Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>36</th>\n      <td>Target</td>\n      <td>1.048135</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Curricular units 2nd sem (approved)</td>\n      <td>0.481456</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>Curricular units 2nd sem (grade)</td>\n      <td>0.417479</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Curricular units 1st sem (approved)</td>\n      <td>0.406723</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Curricular units 1st sem (grade)</td>\n      <td>0.365549</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Curricular units 2nd sem (evaluations)</td>\n      <td>0.195807</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Curricular units 1st sem (evaluations)</td>\n      <td>0.188136</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Course</td>\n      <td>0.113880</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Tuition fees up to date</td>\n      <td>0.109436</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Admission grade</td>\n      <td>0.105250</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Age at enrollment</td>\n      <td>0.095069</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Previous qualification (grade)</td>\n      <td>0.091108</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Scholarship holder</td>\n      <td>0.089176</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Application mode</td>\n      <td>0.083433</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Curricular units 1st sem (enrolled)</td>\n      <td>0.076370</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Curricular units 2nd sem (enrolled)</td>\n      <td>0.075848</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Gender</td>\n      <td>0.056981</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Previous qualification</td>\n      <td>0.033361</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Mother's qualification</td>\n      <td>0.033349</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Debtor</td>\n      <td>0.032331</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Father's qualification</td>\n      <td>0.029423</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Mother's occupation</td>\n      <td>0.028342</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Father's occupation</td>\n      <td>0.026518</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>Marital status</td>\n      <td>0.021026</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Displaced</td>\n      <td>0.018155</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Application order</td>\n      <td>0.016599</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>Unemployment rate</td>\n      <td>0.013764</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Daytime/evening attendance</td>\n      <td>0.012637</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>GDP</td>\n      <td>0.012042</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>Inflation rate</td>\n      <td>0.008999</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>Curricular units 2nd sem (without evaluations)</td>\n      <td>0.006512</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Curricular units 1st sem (without evaluations)</td>\n      <td>0.002899</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>International</td>\n      <td>0.001328</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Curricular units 1st sem (credited)</td>\n      <td>0.000353</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Educational special needs</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Curricular units 2nd sem (credited)</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Nacionality</td>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"raw","source":"# Visualizing feature distributions\n\ndata1.hist(bins=40, figsize=(25, 15))\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-22T17:25:35.396022Z","iopub.execute_input":"2024-06-22T17:25:35.396489Z","iopub.status.idle":"2024-06-22T17:25:44.522481Z","shell.execute_reply.started":"2024-06-22T17:25:35.396450Z","shell.execute_reply":"2024-06-22T17:25:44.520950Z"}}},{"cell_type":"raw","source":"# Correlation heatmap\n\n# function for correlation heatmap\n\ndef plot_correlation_heatmap(df):\n    _ , ax = plt.subplots(figsize =(14, 12))\n    colormap = sns.diverging_palette(220, 10, as_cmap = True)\n    \n    _ = sns.heatmap(\n        df.corr(), \n        #center=True,\n        cmap = 'coolwarm',\n        square=True, \n        cbar_kws={'shrink':.9 }, \n        ax=ax,\n        annot=True, \n        linewidths=0.1,vmin=-1, vmax=1.0, linecolor='white',\n        annot_kws={'fontsize': 5 }\n    )\n    plt.title('Correlation of Features', y=1.05, size=15)\n    \n\nplot_correlation_heatmap(data1)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T17:25:44.524239Z","iopub.execute_input":"2024-06-22T17:25:44.524716Z","iopub.status.idle":"2024-06-22T17:25:50.506421Z","shell.execute_reply.started":"2024-06-22T17:25:44.524657Z","shell.execute_reply":"2024-06-22T17:25:50.505190Z"}}},{"cell_type":"raw","source":"# Violin plot to see distribution of numerical feature across target classes\ndef plot_violinplot(df):\n    num_features = len(total_numerical_features)\n    plot_cols = 3\n    plot_rows = math.ceil(num_features / plot_cols)\n    _ , ax = plt.subplots(plot_rows, plot_cols, figsize =(15, plot_rows * 5))\n    ax = ax.flatten()\n    for i,ft in enumerate(total_numerical_features):\n        sns.violinplot(x='Target', y=ft, data=df, ax=ax[i])\n        ax[i].set_title(f' {ft} vs Target')\n        ax[i].set_xlabel('Target')\n        ax[i].set_ylabel(ft)\n    \n    plt.tight_layout()\n    plt.show()\n    \n\n\nplot_violinplot(data1)\n    \n    \n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T17:25:50.508077Z","iopub.execute_input":"2024-06-22T17:25:50.508497Z","iopub.status.idle":"2024-06-22T17:26:12.768339Z","shell.execute_reply.started":"2024-06-22T17:25:50.508461Z","shell.execute_reply":"2024-06-22T17:26:12.767090Z"}}},{"cell_type":"raw","source":"# Box plot to see relationship between numerical feature and target\n\ndef plot_boxplot(df):\n    num_features = len(total_numerical_features)\n    plot_cols = 3\n    plot_rows = math.ceil(num_features / plot_cols)\n    _ , ax = plt.subplots(plot_rows, plot_cols, figsize =(15, plot_rows * 5))\n    ax = ax.flatten()\n    for i,ft in enumerate(total_numerical_features):\n        sns.boxplot(x='Target', y=ft, data=df, ax=ax[i])\n        ax[i].set_title(f' {ft} vs Target')\n        ax[i].set_xlabel('Target')\n        ax[i].set_ylabel(ft)\n    \n    plt.tight_layout()\n    plt.show()\n    \n\n\nplot_boxplot(data1)\n    \n\n    \n    ","metadata":{"execution":{"iopub.status.busy":"2024-06-22T17:26:12.769888Z","iopub.execute_input":"2024-06-22T17:26:12.770275Z","iopub.status.idle":"2024-06-22T17:26:22.586795Z","shell.execute_reply.started":"2024-06-22T17:26:12.770242Z","shell.execute_reply":"2024-06-22T17:26:22.585542Z"}}},{"cell_type":"markdown","source":"# scatter plot???","metadata":{}},{"cell_type":"raw","source":"# Outlier detection using IQR instead of Z-Score as data is not normally distibuted\n\ndef identify_features_with_outliers(df):\n    outliers = pd.DataFrame()\n    #outliers = pd.DataFrame(columns=['feature', 'outliers count', 'Outlier\\'s Percentage%'])\n    total_data=df.shape[0]\n    print(total_data)\n    for i, feature in enumerate(df):\n        count = 0\n        # Calculate Q1 (25th percentile) and Q3 (75th percentile)\n        Q1 = df[feature].quantile(0.25)\n        Q3 = df[feature].quantile(0.75)\n        IQR = Q3 - Q1\n\n        # Define the outlier boundaries\n        lower_bound = Q1 - 1.5 * IQR\n        upper_bound = Q3 + 1.5 * IQR\n        \n\n        # Identify outliers\n        \n        count = len(df[(df[feature] < lower_bound) | (df[feature] > upper_bound)])\n        \n        percentage = round((count*100)/df.shape[0],2)\n        outliers = pd.concat([outliers, pd.DataFrame({'Features': [feature], 'Outliers count': [count],  'Outliers Percentage%': [percentage]})], ignore_index=True)\n        outliers=outliers.sort_values(by='Outliers count', ascending=False)       \n    return outliers\n             \noutliers = identify_features_with_outliers(data1)\noutliers\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T21:15:10.123019Z","iopub.execute_input":"2024-06-22T21:15:10.123794Z","iopub.status.idle":"2024-06-22T21:15:10.358323Z","shell.execute_reply.started":"2024-06-22T21:15:10.123754Z","shell.execute_reply":"2024-06-22T21:15:10.357356Z"}}},{"cell_type":"markdown","source":"# Data Preperation","metadata":{}},{"cell_type":"markdown","source":"**Drop Unimportant Features**","metadata":{}},{"cell_type":"code","source":"\ndata1.drop(['Inflation rate',\n            'Curricular units 2nd sem (without evaluations)',\n            'Curricular units 1st sem (without evaluations)',\n            'International',\n            'Curricular units 1st sem (credited)',\n            'Educational special needs',\n            'Curricular units 2nd sem (credited)',\n            'Nacionality'],axis=1,inplace=True)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.692128Z","iopub.execute_input":"2024-06-23T07:42:42.692919Z","iopub.status.idle":"2024-06-23T07:42:42.713514Z","shell.execute_reply.started":"2024-06-23T07:42:42.692874Z","shell.execute_reply":"2024-06-23T07:42:42.712241Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"data1_test.drop(['Inflation rate',\n            'Curricular units 2nd sem (without evaluations)',\n            'Curricular units 1st sem (without evaluations)',\n            'International',\n            'Curricular units 1st sem (credited)',\n            'Educational special needs',\n            'Curricular units 2nd sem (credited)',\n            'Nacionality'],axis=1,inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.715001Z","iopub.execute_input":"2024-06-23T07:42:42.715343Z","iopub.status.idle":"2024-06-23T07:42:42.727708Z","shell.execute_reply.started":"2024-06-23T07:42:42.715315Z","shell.execute_reply":"2024-06-23T07:42:42.726376Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"X = data1.drop(columns='Target')\n","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.729456Z","iopub.execute_input":"2024-06-23T07:42:42.729873Z","iopub.status.idle":"2024-06-23T07:42:42.748666Z","shell.execute_reply.started":"2024-06-23T07:42:42.729840Z","shell.execute_reply":"2024-06-23T07:42:42.747240Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":"**Handling Outliers**","metadata":{}},{"cell_type":"code","source":"scaler = RobustScaler()\n\n# Fit and transform the data\nscaled_data = scaler.fit_transform(X)\n\n# Convert back to DataFrame if needed\nX = pd.DataFrame(scaled_data, columns=X.columns)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.750278Z","iopub.execute_input":"2024-06-23T07:42:42.750626Z","iopub.status.idle":"2024-06-23T07:42:42.860129Z","shell.execute_reply.started":"2024-06-23T07:42:42.750596Z","shell.execute_reply":"2024-06-23T07:42:42.858595Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.861882Z","iopub.execute_input":"2024-06-23T07:42:42.862409Z","iopub.status.idle":"2024-06-23T07:42:42.899749Z","shell.execute_reply.started":"2024-06-23T07:42:42.862349Z","shell.execute_reply":"2024-06-23T07:42:42.898339Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"   Marital status  Application mode  Application order    Course  \\\n0             0.0         -0.421053                0.0 -0.029038   \n1             0.0          0.000000                0.0 -0.029038   \n2             0.0          0.000000                1.0  0.000000   \n3             0.0         -0.421053                2.0  0.446461   \n4             0.0         -0.421053                1.0  0.446461   \n\n   Daytime/evening attendance  Previous qualification  \\\n0                         0.0                     0.0   \n1                         0.0                     0.0   \n2                         0.0                     0.0   \n3                         0.0                     0.0   \n4                         0.0                     0.0   \n\n   Previous qualification (grade)  Mother's qualification  \\\n0                       -0.473333               -0.500000   \n1                       -0.540000                0.000000   \n2                        0.260000               -0.444444   \n3                       -0.140000                0.000000   \n4                       -0.073333                0.000000   \n\n   Father's qualification  Mother's occupation  ...  \\\n0                0.000000                 -0.4  ...   \n1                0.000000                  0.4  ...   \n2                0.000000                 -1.0  ...   \n3               -0.484848                 -0.8  ...   \n4                0.545455                 -0.6  ...   \n\n   Curricular units 1st sem (enrolled)  \\\n0                                  0.0   \n1                                  0.0   \n2                                  0.0   \n3                                  1.0   \n4                                  1.0   \n\n   Curricular units 1st sem (evaluations)  \\\n0                               -0.333333   \n1                                0.333333   \n2                               -2.333333   \n3                                0.666667   \n4                                1.666667   \n\n   Curricular units 1st sem (approved)  Curricular units 1st sem (grade)  \\\n0                                 0.25                          0.881295   \n1                                -0.25                         -0.214029   \n2                                -1.25                         -4.595324   \n3                                 0.50                          0.160364   \n4                                 0.25                          0.289568   \n\n   Curricular units 2nd sem (enrolled)  \\\n0                                  0.0   \n1                                  0.0   \n2                                  0.0   \n3                                  2.0   \n4                                  1.0   \n\n   Curricular units 2nd sem (evaluations)  \\\n0                                0.000000   \n1                                0.666667   \n2                               -2.333333   \n3                                1.333333   \n4                                1.666667   \n\n   Curricular units 2nd sem (approved)  Curricular units 2nd sem (grade)  \\\n0                                  0.2                          0.088073   \n1                                 -1.0                         -3.743119   \n2                                 -1.0                         -3.743119   \n3                                  0.4                          0.208734   \n4                                  0.2                          0.243670   \n\n   Unemployment rate       GDP  \n0           0.000000  0.487106  \n1           0.000000  0.487106  \n2           1.545455 -0.355301  \n3           0.000000  0.487106  \n4          -1.060606  0.000000  \n\n[5 rows x 28 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Marital status</th>\n      <th>Application mode</th>\n      <th>Application order</th>\n      <th>Course</th>\n      <th>Daytime/evening attendance</th>\n      <th>Previous qualification</th>\n      <th>Previous qualification (grade)</th>\n      <th>Mother's qualification</th>\n      <th>Father's qualification</th>\n      <th>Mother's occupation</th>\n      <th>...</th>\n      <th>Curricular units 1st sem (enrolled)</th>\n      <th>Curricular units 1st sem (evaluations)</th>\n      <th>Curricular units 1st sem (approved)</th>\n      <th>Curricular units 1st sem (grade)</th>\n      <th>Curricular units 2nd sem (enrolled)</th>\n      <th>Curricular units 2nd sem (evaluations)</th>\n      <th>Curricular units 2nd sem (approved)</th>\n      <th>Curricular units 2nd sem (grade)</th>\n      <th>Unemployment rate</th>\n      <th>GDP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>-0.421053</td>\n      <td>0.0</td>\n      <td>-0.029038</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>-0.473333</td>\n      <td>-0.500000</td>\n      <td>0.000000</td>\n      <td>-0.4</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>-0.333333</td>\n      <td>0.25</td>\n      <td>0.881295</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.2</td>\n      <td>0.088073</td>\n      <td>0.000000</td>\n      <td>0.487106</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>-0.029038</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>-0.540000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.4</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.333333</td>\n      <td>-0.25</td>\n      <td>-0.214029</td>\n      <td>0.0</td>\n      <td>0.666667</td>\n      <td>-1.0</td>\n      <td>-3.743119</td>\n      <td>0.000000</td>\n      <td>0.487106</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>1.0</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.260000</td>\n      <td>-0.444444</td>\n      <td>0.000000</td>\n      <td>-1.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>-2.333333</td>\n      <td>-1.25</td>\n      <td>-4.595324</td>\n      <td>0.0</td>\n      <td>-2.333333</td>\n      <td>-1.0</td>\n      <td>-3.743119</td>\n      <td>1.545455</td>\n      <td>-0.355301</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.0</td>\n      <td>-0.421053</td>\n      <td>2.0</td>\n      <td>0.446461</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>-0.140000</td>\n      <td>0.000000</td>\n      <td>-0.484848</td>\n      <td>-0.8</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.666667</td>\n      <td>0.50</td>\n      <td>0.160364</td>\n      <td>2.0</td>\n      <td>1.333333</td>\n      <td>0.4</td>\n      <td>0.208734</td>\n      <td>0.000000</td>\n      <td>0.487106</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.0</td>\n      <td>-0.421053</td>\n      <td>1.0</td>\n      <td>0.446461</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>-0.073333</td>\n      <td>0.000000</td>\n      <td>0.545455</td>\n      <td>-0.6</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>1.666667</td>\n      <td>0.25</td>\n      <td>0.289568</td>\n      <td>1.0</td>\n      <td>1.666667</td>\n      <td>0.2</td>\n      <td>0.243670</td>\n      <td>-1.060606</td>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 28 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# Feature Selection","metadata":{}},{"cell_type":"markdown","source":"# Feature Engineering","metadata":{}},{"cell_type":"raw","source":"#high mutual information features\nhigh_MI_features= ['Curricular units 2nd sem (approved)', 'Curricular units 2nd sem (grade)', 'Curricular units 1st sem (approved)', 'Curricular units 1st sem (grade)']\n\n#everything will be clubbed soon\ncategorical_columns=high_MI_features\n\n# Function to perform target encoding on training data\ndef target_encode(train, test, target, categorical_columns):\n    for col in categorical_columns:\n        means = train.groupby(col)[target].mean()\n        train[col + '_encoded'] = train[col].map(means)\n        test[col + '_encoded'] = test[col].map(means)\n    return train, test\n\n# Function to apply target encoding to test data\ndef apply_target_encoding(test, means, categorical_columns):\n    \n    for col in categorical_columns:\n        print(means)\n        test[col + '_encoded'] = test[col].map(means[col])\n    return test\n\n# Apply encoding to train data\nencoded_train_df, encoded_test_df = target_encode(data1, data1_test,'Target', categorical_columns)\n\n\n# Apply encoding to test data\n#encoded_test_df = apply_target_encoding(data1_test.copy(), encoding_means, categorical_columns)\n\n# Drop original categorical columns if needed\ndata1 = data1.drop(columns=categorical_columns)\ndata1_test=data1_test.drop(columns=categorical_columns)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-23T06:06:33.943536Z","iopub.execute_input":"2024-06-23T06:06:33.943909Z","iopub.status.idle":"2024-06-23T06:06:33.989319Z","shell.execute_reply.started":"2024-06-23T06:06:33.943881Z","shell.execute_reply":"2024-06-23T06:06:33.988275Z"}}},{"cell_type":"markdown","source":"# ","metadata":{}},{"cell_type":"markdown","source":"# 🤖 Model Selection","metadata":{}},{"cell_type":"code","source":"y = pd.DataFrame()\ny.loc[:, 'Target'] = data1.loc[:, 'Target']\n\ny.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.901202Z","iopub.execute_input":"2024-06-23T07:42:42.901578Z","iopub.status.idle":"2024-06-23T07:42:42.919129Z","shell.execute_reply.started":"2024-06-23T07:42:42.901546Z","shell.execute_reply":"2024-06-23T07:42:42.917548Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"    Target\nid        \n0        2\n1        0\n2        0\n3        1\n4        2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Target</th>\n    </tr>\n    <tr>\n      <th>id</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"X.columns","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.920734Z","iopub.execute_input":"2024-06-23T07:42:42.921159Z","iopub.status.idle":"2024-06-23T07:42:42.929540Z","shell.execute_reply.started":"2024-06-23T07:42:42.921126Z","shell.execute_reply":"2024-06-23T07:42:42.928233Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"Index(['Marital status', 'Application mode', 'Application order', 'Course',\n       'Daytime/evening attendance', 'Previous qualification',\n       'Previous qualification (grade)', 'Mother's qualification',\n       'Father's qualification', 'Mother's occupation', 'Father's occupation',\n       'Admission grade', 'Displaced', 'Debtor', 'Tuition fees up to date',\n       'Gender', 'Scholarship holder', 'Age at enrollment',\n       'Curricular units 1st sem (enrolled)',\n       'Curricular units 1st sem (evaluations)',\n       'Curricular units 1st sem (approved)',\n       'Curricular units 1st sem (grade)',\n       'Curricular units 2nd sem (enrolled)',\n       'Curricular units 2nd sem (evaluations)',\n       'Curricular units 2nd sem (approved)',\n       'Curricular units 2nd sem (grade)', 'Unemployment rate', 'GDP'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"data1_test.columns","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.931083Z","iopub.execute_input":"2024-06-23T07:42:42.931464Z","iopub.status.idle":"2024-06-23T07:42:42.943994Z","shell.execute_reply.started":"2024-06-23T07:42:42.931432Z","shell.execute_reply":"2024-06-23T07:42:42.942532Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"Index(['Marital status', 'Application mode', 'Application order', 'Course',\n       'Daytime/evening attendance', 'Previous qualification',\n       'Previous qualification (grade)', 'Mother's qualification',\n       'Father's qualification', 'Mother's occupation', 'Father's occupation',\n       'Admission grade', 'Displaced', 'Debtor', 'Tuition fees up to date',\n       'Gender', 'Scholarship holder', 'Age at enrollment',\n       'Curricular units 1st sem (enrolled)',\n       'Curricular units 1st sem (evaluations)',\n       'Curricular units 1st sem (approved)',\n       'Curricular units 1st sem (grade)',\n       'Curricular units 2nd sem (enrolled)',\n       'Curricular units 2nd sem (evaluations)',\n       'Curricular units 2nd sem (approved)',\n       'Curricular units 2nd sem (grade)', 'Unemployment rate', 'GDP'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"# Train-validation split\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, test_size=0.3, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.945474Z","iopub.execute_input":"2024-06-23T07:42:42.945865Z","iopub.status.idle":"2024-06-23T07:42:42.985295Z","shell.execute_reply.started":"2024-06-23T07:42:42.945825Z","shell.execute_reply":"2024-06-23T07:42:42.983893Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"# Changing the shape of y dataframe \ny_train = y_train.values.ravel()\nprint(y_train.shape)","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.989574Z","iopub.execute_input":"2024-06-23T07:42:42.990040Z","iopub.status.idle":"2024-06-23T07:42:42.996874Z","shell.execute_reply.started":"2024-06-23T07:42:42.990004Z","shell.execute_reply":"2024-06-23T07:42:42.995373Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stdout","text":"(53562,)\n","output_type":"stream"}]},{"cell_type":"code","source":"\n# Define models and their hyperparameters\nmodels = {\n    'Random Forest': {\n        'model': RandomForestClassifier(random_state=42),\n        'params': {\n            'model__n_estimators': [100, 200, 300],\n            'model__max_depth': [None, 10, 20, 30],\n            'model__min_samples_split': [2, 5, 10],\n            'model__min_samples_leaf': [1, 2, 4]\n        }\n    },\n    'XGBoost': {\n        'model': XGBClassifier(random_state=42),\n        'params': {\n            'model__n_estimators': [100, 200, 300],\n            'model__max_depth': [3, 4, 5],\n            'model__learning_rate': [0.01, 0.1, 0.3],\n            'model__subsample': [0.8, 0.9, 1.0]\n        }\n    },\n    'Logistic Regression': {\n        'model': LogisticRegression(random_state=42),\n        'params': {\n            'model__C': [0.001, 0.01, 0.1, 1, 10, 100],\n            'model__penalty': ['l2'],  # 'l1' penalty is not supported with 'lbfgs' solver\n            'model__solver': ['lbfgs', 'saga']\n        }\n    }\n}\n\n# Function to create a pipeline with scaling and model\ndef create_pipeline(model):\n    return Pipeline([\n        ('scaler', StandardScaler()),\n        ('model', model)\n    ])\n\n# Perform Grid Search with Cross-Validation\nresults = {}\n\nfor name, model_info in models.items():\n    print(f\"\\nTuning {name}...\")\n    pipeline = create_pipeline(model_info['model'])\n    grid_search = GridSearchCV(pipeline, model_info['params'], cv=5, n_jobs=-1, verbose=1)\n    grid_search.fit(X_train, y_train)\n    \n    # Store results\n    results[name] = {\n        'best_params': grid_search.best_params_,\n        'best_score': grid_search.best_score_,\n        'test_accuracy': accuracy_score(y_test, grid_search.predict(X_test)),\n        'classification_report': classification_report(y_test, grid_search.predict(X_test))\n    }\n\n# Print results\nfor name, result in results.items():\n    print(f\"\\n{name}:\")\n    print(f\"Best Parameters: {result['best_params']}\")\n    print(f\"Best Cross-Validation Score: {result['best_score']:.4f}\")\n    print(f\"Test Accuracy: {result['test_accuracy']:.4f}\")\n    print(\"Classification Report:\")\n    print(result['classification_report'])\n\n# Identify the best model\nbest_model = max(results, key=lambda x: results[x]['test_accuracy'])\nprint(f\"\\nBest Model: {best_model}\")\nprint(f\"Best Model Test Accuracy: {results[best_model]['test_accuracy']:.4f}\")\n\n# Feature importance for the best model (if applicable)\nif best_model in ['Random Forest', 'XGBoost']:\n    best_pipeline = create_pipeline(models[best_model]['model'])\n    best_pipeline.set_params(**results[best_model]['best_params'])\n    best_pipeline.fit(X_train, y_train)\n    \n    importance = pd.DataFrame({\n        'feature': X.columns,\n        'importance': best_pipeline.named_steps['model'].feature_importances_\n    }).sort_values('importance', ascending=False)\n    \n    print(\"\\nFeature Importance:\")\n    print(importance)","metadata":{"execution":{"iopub.status.busy":"2024-06-23T07:42:42.998984Z","iopub.execute_input":"2024-06-23T07:42:42.999443Z","iopub.status.idle":"2024-06-23T09:02:50.844996Z","shell.execute_reply.started":"2024-06-23T07:42:42.999408Z","shell.execute_reply":"2024-06-23T09:02:50.843442Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"\nTuning Random Forest...\nFitting 5 folds for each of 108 candidates, totalling 540 fits\n\nTuning XGBoost...\nFitting 5 folds for each of 81 candidates, totalling 405 fits\n\nTuning Logistic Regression...\nFitting 5 folds for each of 12 candidates, totalling 60 fits\n\nRandom Forest:\nBest Parameters: {'model__max_depth': 30, 'model__min_samples_leaf': 1, 'model__min_samples_split': 10, 'model__n_estimators': 200}\nBest Cross-Validation Score: 0.8238\nTest Accuracy: 0.8313\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.90      0.83      0.87      7579\n           1       0.65      0.60      0.62      4425\n           2       0.85      0.93      0.89     10952\n\n    accuracy                           0.83     22956\n   macro avg       0.80      0.78      0.79     22956\nweighted avg       0.83      0.83      0.83     22956\n\n\nXGBoost:\nBest Parameters: {'model__learning_rate': 0.1, 'model__max_depth': 5, 'model__n_estimators': 200, 'model__subsample': 0.9}\nBest Cross-Validation Score: 0.8289\nTest Accuracy: 0.8375\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.90      0.84      0.87      7579\n           1       0.66      0.62      0.64      4425\n           2       0.86      0.93      0.89     10952\n\n    accuracy                           0.84     22956\n   macro avg       0.81      0.79      0.80     22956\nweighted avg       0.84      0.84      0.84     22956\n\n\nLogistic Regression:\nBest Parameters: {'model__C': 0.1, 'model__penalty': 'l2', 'model__solver': 'saga'}\nBest Cross-Validation Score: 0.8136\nTest Accuracy: 0.8218\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.90      0.82      0.86      7579\n           1       0.63      0.56      0.59      4425\n           2       0.84      0.93      0.88     10952\n\n    accuracy                           0.82     22956\n   macro avg       0.79      0.77      0.78     22956\nweighted avg       0.82      0.82      0.82     22956\n\n\nBest Model: XGBoost\nBest Model Test Accuracy: 0.8375\n\nFeature Importance:\n                                   feature  importance\n24     Curricular units 2nd sem (approved)    0.525447\n14                 Tuition fees up to date    0.079526\n20     Curricular units 1st sem (approved)    0.045866\n23  Curricular units 2nd sem (evaluations)    0.043648\n22     Curricular units 2nd sem (enrolled)    0.038565\n16                      Scholarship holder    0.035203\n25        Curricular units 2nd sem (grade)    0.021837\n19  Curricular units 1st sem (evaluations)    0.020932\n18     Curricular units 1st sem (enrolled)    0.019188\n13                                  Debtor    0.015853\n15                                  Gender    0.015010\n4               Daytime/evening attendance    0.013011\n3                                   Course    0.011112\n17                       Age at enrollment    0.010402\n1                         Application mode    0.010086\n21        Curricular units 1st sem (grade)    0.009879\n9                      Mother's occupation    0.009209\n27                                     GDP    0.008713\n26                       Unemployment rate    0.007444\n10                     Father's occupation    0.007169\n11                         Admission grade    0.007027\n0                           Marital status    0.006689\n12                               Displaced    0.006678\n2                        Application order    0.006469\n6           Previous qualification (grade)    0.006341\n5                   Previous qualification    0.006240\n8                   Father's qualification    0.006236\n7                   Mother's qualification    0.006217\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Tuning Random Forest...\nFitting 5 folds for each of 108 candidates, totalling 540 fits\n\nTuning XGBoost...\nFitting 5 folds for each of 81 candidates, totalling 405 fits\n\nTuning Logistic Regression...\nFitting 5 folds for each of 12 candidates, totalling 60 fits\n\nRandom Forest:\nBest Parameters: {'model__max_depth': 30, 'model__min_samples_leaf': 1, 'model__min_samples_split': 10, 'model__n_estimators': 200}\nBest Cross-Validation Score: 0.8238\nTest Accuracy: 0.8313\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.90      0.83      0.87      7579\n           1       0.65      0.60      0.62      4425\n           2       0.85      0.93      0.89     10952\n\n    accuracy                           0.83     22956\n   macro avg       0.80      0.78      0.79     22956\nweighted avg       0.83      0.83      0.83     22956\n\n\nXGBoost:\nBest Parameters: {'model__learning_rate': 0.1, 'model__max_depth': 5, 'model__n_estimators': 200, 'model__subsample': 0.9}\nBest Cross-Validation Score: 0.8289\nTest Accuracy: 0.8375\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.90      0.84      0.87      7579\n           1       0.66      0.62      0.64      4425\n           2       0.86      0.93      0.89     10952\n\n    accuracy                           0.84     22956\n   macro avg       0.81      0.79      0.80     22956\nweighted avg       0.84      0.84      0.84     22956\n\n\nLogistic Regression:\nBest Parameters: {'model__C': 0.1, 'model__penalty': 'l2', 'model__solver': 'saga'}\nBest Cross-Validation Score: 0.8136\nTest Accuracy: 0.8218\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.90      0.82      0.86      7579\n           1       0.63      0.56      0.59      4425\n           2       0.84      0.93      0.88     10952\n\n    accuracy                           0.82     22956\n   macro avg       0.79      0.77      0.78     22956\nweighted avg       0.82      0.82      0.82     22956\n\n\nBest Model: XGBoost\nBest Model Test Accuracy: 0.8375\n\nFeature Importance:\n                                   feature  importance\n24     Curricular units 2nd sem (approved)    0.525447\n14                 Tuition fees up to date    0.079526\n20     Curricular units 1st sem (approved)    0.045866\n23  Curricular units 2nd sem (evaluations)    0.043648\n22     Curricular units 2nd sem (enrolled)    0.038565\n16                      Scholarship holder    0.035203\n25        Curricular units 2nd sem (grade)    0.021837\n19  Curricular units 1st sem (evaluations)    0.020932\n18     Curricular units 1st sem (enrolled)    0.019188\n13                                  Debtor    0.015853\n15                                  Gender    0.015010\n4               Daytime/evening attendance    0.013011\n3                                   Course    0.011112\n17                       Age at enrollment    0.010402\n1                         Application mode    0.010086\n21        Curricular units 1st sem (grade)    0.009879\n9                      Mother's occupation    0.009209\n27                                     GDP    0.008713\n26                       Unemployment rate    0.007444\n10                     Father's occupation    0.007169\n11                         Admission grade    0.007027\n0                           Marital status    0.006689\n12                               Displaced    0.006678\n2                        Application order    0.006469\n6           Previous qualification (grade)    0.006341\n5                   Previous qualification    0.006240\n8                   Father's qualification    0.006236\n7                   Mother's qualification    0.006217","metadata":{}},{"cell_type":"raw","source":"from catboost import CatBoostClassifier\n\n# Initialize CatBoostClassifier\nmodel = CatBoostClassifier(iterations=1000, \n                           learning_rate=0.1, \n                           depth=6, \n                           eval_metric='Accuracy', \n                           verbose=100)\n\n# Train the model\nmodel.fit(X_train, y_train, eval_set=(X_test, y_test), plot=True)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T17:26:23.048378Z","iopub.execute_input":"2024-06-22T17:26:23.048895Z","iopub.status.idle":"2024-06-22T17:26:48.670001Z","shell.execute_reply.started":"2024-06-22T17:26:23.048852Z","shell.execute_reply":"2024-06-22T17:26:48.668461Z"}}},{"cell_type":"code","source":"\n\n# Initialize CatBoostClassifier\nmodel = CatBoostClassifier(iterations=1000, \n                           learning_rate=0.1, \n                           depth=6, \n                           eval_metric='Accuracy', \n                           verbose=100)\n\n# Train the model\nmodel.fit(X_train, y_train, eval_set=(X_test, y_test), plot=True)\n","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 📈 Model Validation","metadata":{}},{"cell_type":"raw","source":"from sklearn.metrics import accuracy_score\n\n# Make predictions\ny_pred = model.predict(X_test)\n\n# Evaluate accuracy\naccuracy = accuracy_score(y_test, y_pred)\nprint(f\"Test Accuracy: {accuracy:.4f}\")\n","metadata":{"execution":{"iopub.status.busy":"2024-06-22T17:26:48.672106Z","iopub.execute_input":"2024-06-22T17:26:48.672529Z","iopub.status.idle":"2024-06-22T17:26:48.724753Z","shell.execute_reply.started":"2024-06-22T17:26:48.672496Z","shell.execute_reply":"2024-06-22T17:26:48.723551Z"}}},{"cell_type":"markdown","source":"# 🔮 Prediction","metadata":{}},{"cell_type":"code","source":"data1_test.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-23T09:02:50.847086Z","iopub.execute_input":"2024-06-23T09:02:50.847522Z","iopub.status.idle":"2024-06-23T09:02:50.880920Z","shell.execute_reply.started":"2024-06-23T09:02:50.847470Z","shell.execute_reply":"2024-06-23T09:02:50.879244Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"       Marital status  Application mode  Application order  Course  \\\nid                                                                   \n76518               1                 1                  1    9500   \n76519               1                 1                  1    9238   \n76520               1                 1                  1    9238   \n76521               1                44                  1    9147   \n76522               1                39                  1    9670   \n\n       Daytime/evening attendance  Previous qualification  \\\nid                                                          \n76518                           1                       1   \n76519                           1                       1   \n76520                           1                       1   \n76521                           1                      39   \n76522                           1                       1   \n\n       Previous qualification (grade)  Mother's qualification  \\\nid                                                              \n76518                           141.0                       3   \n76519                           128.0                       1   \n76520                           118.0                       1   \n76521                           130.0                       1   \n76522                           110.0                       1   \n\n       Father's qualification  Mother's occupation  ...  \\\nid                                                  ...   \n76518                       1                    2  ...   \n76519                      19                    4  ...   \n76520                      19                    4  ...   \n76521                      19                    3  ...   \n76522                      37                    5  ...   \n\n       Curricular units 1st sem (enrolled)  \\\nid                                           \n76518                                    7   \n76519                                    6   \n76520                                    6   \n76521                                    6   \n76522                                    6   \n\n       Curricular units 1st sem (evaluations)  \\\nid                                              \n76518                                       0   \n76519                                       7   \n76520                                      11   \n76521                                      15   \n76522                                       9   \n\n       Curricular units 1st sem (approved)  Curricular units 1st sem (grade)  \\\nid                                                                             \n76518                                    0                          0.000000   \n76519                                    6                         14.857143   \n76520                                    6                         12.000000   \n76521                                    5                         11.500000   \n76522                                    3                         11.000000   \n\n       Curricular units 2nd sem (enrolled)  \\\nid                                           \n76518                                    8   \n76519                                    6   \n76520                                    6   \n76521                                    8   \n76522                                    6   \n\n       Curricular units 2nd sem (evaluations)  \\\nid                                              \n76518                                       0   \n76519                                       6   \n76520                                      11   \n76521                                      14   \n76522                                       9   \n\n       Curricular units 2nd sem (approved)  Curricular units 2nd sem (grade)  \\\nid                                                                             \n76518                                    0                          0.000000   \n76519                                    6                         13.500000   \n76520                                    5                         11.000000   \n76521                                    5                         11.000000   \n76522                                    4                         10.666667   \n\n       Unemployment rate   GDP  \nid                              \n76518               13.9  0.79  \n76519               11.1  2.02  \n76520               15.5 -4.06  \n76521                8.9  3.51  \n76522                7.6  0.32  \n\n[5 rows x 28 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Marital status</th>\n      <th>Application mode</th>\n      <th>Application order</th>\n      <th>Course</th>\n      <th>Daytime/evening attendance</th>\n      <th>Previous qualification</th>\n      <th>Previous qualification (grade)</th>\n      <th>Mother's qualification</th>\n      <th>Father's qualification</th>\n      <th>Mother's occupation</th>\n      <th>...</th>\n      <th>Curricular units 1st sem (enrolled)</th>\n      <th>Curricular units 1st sem (evaluations)</th>\n      <th>Curricular units 1st sem (approved)</th>\n      <th>Curricular units 1st sem (grade)</th>\n      <th>Curricular units 2nd sem (enrolled)</th>\n      <th>Curricular units 2nd sem (evaluations)</th>\n      <th>Curricular units 2nd sem (approved)</th>\n      <th>Curricular units 2nd sem (grade)</th>\n      <th>Unemployment rate</th>\n      <th>GDP</th>\n    </tr>\n    <tr>\n      <th>id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>76518</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>9500</td>\n      <td>1</td>\n      <td>1</td>\n      <td>141.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>...</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>13.9</td>\n      <td>0.79</td>\n    </tr>\n    <tr>\n      <th>76519</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>9238</td>\n      <td>1</td>\n      <td>1</td>\n      <td>128.0</td>\n      <td>1</td>\n      <td>19</td>\n      <td>4</td>\n      <td>...</td>\n      <td>6</td>\n      <td>7</td>\n      <td>6</td>\n      <td>14.857143</td>\n      <td>6</td>\n      <td>6</td>\n      <td>6</td>\n      <td>13.500000</td>\n      <td>11.1</td>\n      <td>2.02</td>\n    </tr>\n    <tr>\n      <th>76520</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>9238</td>\n      <td>1</td>\n      <td>1</td>\n      <td>118.0</td>\n      <td>1</td>\n      <td>19</td>\n      <td>4</td>\n      <td>...</td>\n      <td>6</td>\n      <td>11</td>\n      <td>6</td>\n      <td>12.000000</td>\n      <td>6</td>\n      <td>11</td>\n      <td>5</td>\n      <td>11.000000</td>\n      <td>15.5</td>\n      <td>-4.06</td>\n    </tr>\n    <tr>\n      <th>76521</th>\n      <td>1</td>\n      <td>44</td>\n      <td>1</td>\n      <td>9147</td>\n      <td>1</td>\n      <td>39</td>\n      <td>130.0</td>\n      <td>1</td>\n      <td>19</td>\n      <td>3</td>\n      <td>...</td>\n      <td>6</td>\n      <td>15</td>\n      <td>5</td>\n      <td>11.500000</td>\n      <td>8</td>\n      <td>14</td>\n      <td>5</td>\n      <td>11.000000</td>\n      <td>8.9</td>\n      <td>3.51</td>\n    </tr>\n    <tr>\n      <th>76522</th>\n      <td>1</td>\n      <td>39</td>\n      <td>1</td>\n      <td>9670</td>\n      <td>1</td>\n      <td>1</td>\n      <td>110.0</td>\n      <td>1</td>\n      <td>37</td>\n      <td>5</td>\n      <td>...</td>\n      <td>6</td>\n      <td>9</td>\n      <td>3</td>\n      <td>11.000000</td>\n      <td>6</td>\n      <td>9</td>\n      <td>4</td>\n      <td>10.666667</td>\n      <td>7.6</td>\n      <td>0.32</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 28 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"X.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-23T09:02:50.882858Z","iopub.execute_input":"2024-06-23T09:02:50.883369Z","iopub.status.idle":"2024-06-23T09:02:50.926379Z","shell.execute_reply.started":"2024-06-23T09:02:50.883332Z","shell.execute_reply":"2024-06-23T09:02:50.925172Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"   Marital status  Application mode  Application order    Course  \\\n0             0.0         -0.421053                0.0 -0.029038   \n1             0.0          0.000000                0.0 -0.029038   \n2             0.0          0.000000                1.0  0.000000   \n3             0.0         -0.421053                2.0  0.446461   \n4             0.0         -0.421053                1.0  0.446461   \n\n   Daytime/evening attendance  Previous qualification  \\\n0                         0.0                     0.0   \n1                         0.0                     0.0   \n2                         0.0                     0.0   \n3                         0.0                     0.0   \n4                         0.0                     0.0   \n\n   Previous qualification (grade)  Mother's qualification  \\\n0                       -0.473333               -0.500000   \n1                       -0.540000                0.000000   \n2                        0.260000               -0.444444   \n3                       -0.140000                0.000000   \n4                       -0.073333                0.000000   \n\n   Father's qualification  Mother's occupation  ...  \\\n0                0.000000                 -0.4  ...   \n1                0.000000                  0.4  ...   \n2                0.000000                 -1.0  ...   \n3               -0.484848                 -0.8  ...   \n4                0.545455                 -0.6  ...   \n\n   Curricular units 1st sem (enrolled)  \\\n0                                  0.0   \n1                                  0.0   \n2                                  0.0   \n3                                  1.0   \n4                                  1.0   \n\n   Curricular units 1st sem (evaluations)  \\\n0                               -0.333333   \n1                                0.333333   \n2                               -2.333333   \n3                                0.666667   \n4                                1.666667   \n\n   Curricular units 1st sem (approved)  Curricular units 1st sem (grade)  \\\n0                                 0.25                          0.881295   \n1                                -0.25                         -0.214029   \n2                                -1.25                         -4.595324   \n3                                 0.50                          0.160364   \n4                                 0.25                          0.289568   \n\n   Curricular units 2nd sem (enrolled)  \\\n0                                  0.0   \n1                                  0.0   \n2                                  0.0   \n3                                  2.0   \n4                                  1.0   \n\n   Curricular units 2nd sem (evaluations)  \\\n0                                0.000000   \n1                                0.666667   \n2                               -2.333333   \n3                                1.333333   \n4                                1.666667   \n\n   Curricular units 2nd sem (approved)  Curricular units 2nd sem (grade)  \\\n0                                  0.2                          0.088073   \n1                                 -1.0                         -3.743119   \n2                                 -1.0                         -3.743119   \n3                                  0.4                          0.208734   \n4                                  0.2                          0.243670   \n\n   Unemployment rate       GDP  \n0           0.000000  0.487106  \n1           0.000000  0.487106  \n2           1.545455 -0.355301  \n3           0.000000  0.487106  \n4          -1.060606  0.000000  \n\n[5 rows x 28 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Marital status</th>\n      <th>Application mode</th>\n      <th>Application order</th>\n      <th>Course</th>\n      <th>Daytime/evening attendance</th>\n      <th>Previous qualification</th>\n      <th>Previous qualification (grade)</th>\n      <th>Mother's qualification</th>\n      <th>Father's qualification</th>\n      <th>Mother's occupation</th>\n      <th>...</th>\n      <th>Curricular units 1st sem (enrolled)</th>\n      <th>Curricular units 1st sem (evaluations)</th>\n      <th>Curricular units 1st sem (approved)</th>\n      <th>Curricular units 1st sem (grade)</th>\n      <th>Curricular units 2nd sem (enrolled)</th>\n      <th>Curricular units 2nd sem (evaluations)</th>\n      <th>Curricular units 2nd sem (approved)</th>\n      <th>Curricular units 2nd sem (grade)</th>\n      <th>Unemployment rate</th>\n      <th>GDP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>-0.421053</td>\n      <td>0.0</td>\n      <td>-0.029038</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>-0.473333</td>\n      <td>-0.500000</td>\n      <td>0.000000</td>\n      <td>-0.4</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>-0.333333</td>\n      <td>0.25</td>\n      <td>0.881295</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.2</td>\n      <td>0.088073</td>\n      <td>0.000000</td>\n      <td>0.487106</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>-0.029038</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>-0.540000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.4</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.333333</td>\n      <td>-0.25</td>\n      <td>-0.214029</td>\n      <td>0.0</td>\n      <td>0.666667</td>\n      <td>-1.0</td>\n      <td>-3.743119</td>\n      <td>0.000000</td>\n      <td>0.487106</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>1.0</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.260000</td>\n      <td>-0.444444</td>\n      <td>0.000000</td>\n      <td>-1.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>-2.333333</td>\n      <td>-1.25</td>\n      <td>-4.595324</td>\n      <td>0.0</td>\n      <td>-2.333333</td>\n      <td>-1.0</td>\n      <td>-3.743119</td>\n      <td>1.545455</td>\n      <td>-0.355301</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.0</td>\n      <td>-0.421053</td>\n      <td>2.0</td>\n      <td>0.446461</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>-0.140000</td>\n      <td>0.000000</td>\n      <td>-0.484848</td>\n      <td>-0.8</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.666667</td>\n      <td>0.50</td>\n      <td>0.160364</td>\n      <td>2.0</td>\n      <td>1.333333</td>\n      <td>0.4</td>\n      <td>0.208734</td>\n      <td>0.000000</td>\n      <td>0.487106</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.0</td>\n      <td>-0.421053</td>\n      <td>1.0</td>\n      <td>0.446461</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>-0.073333</td>\n      <td>0.000000</td>\n      <td>0.545455</td>\n      <td>-0.6</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>1.666667</td>\n      <td>0.25</td>\n      <td>0.289568</td>\n      <td>1.0</td>\n      <td>1.666667</td>\n      <td>0.2</td>\n      <td>0.243670</td>\n      <td>-1.060606</td>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 28 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"predictions = model.predict(data1_test)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-23T09:02:50.928252Z","iopub.execute_input":"2024-06-23T09:02:50.929190Z","iopub.status.idle":"2024-06-23T09:02:51.474147Z","shell.execute_reply.started":"2024-06-23T09:02:50.929142Z","shell.execute_reply":"2024-06-23T09:02:51.472222Z"},"trusted":true},"execution_count":20,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[20], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m predictions \u001b[38;5;241m=\u001b[39m \u001b[43mmodel\u001b[49m\u001b[38;5;241m.\u001b[39mpredict(data1_test)\n","\u001b[0;31mNameError\u001b[0m: name 'model' is not defined"],"ename":"NameError","evalue":"name 'model' is not defined","output_type":"error"}]},{"cell_type":"code","source":"predictions = label_encoder.inverse_transform(predictions)\npredictions","metadata":{"execution":{"iopub.status.busy":"2024-06-23T09:02:51.475846Z","iopub.status.idle":"2024-06-23T09:02:51.476350Z","shell.execute_reply.started":"2024-06-23T09:02:51.476130Z","shell.execute_reply":"2024-06-23T09:02:51.476150Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 📤 Submission","metadata":{}},{"cell_type":"code","source":"submission = pd.DataFrame({\n    'id': data1_test.index,  \n    'Target': predictions  \n})\n\n# Save to CSV 💾\nsubmission.to_csv('submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-06-23T09:02:51.478216Z","iopub.status.idle":"2024-06-23T09:02:51.478664Z","shell.execute_reply.started":"2024-06-23T09:02:51.478458Z","shell.execute_reply":"2024-06-23T09:02:51.478476Z"},"trusted":true},"execution_count":null,"outputs":[]}]}